# 加载逻辑模块
insmod test

# 全局变量
export user_ever_loaded
export user_load_all_menu
export user_osdisk
export user_osdir
# export user_isopath
export user_org_prefix

user_grub2_path=/boot/grub2
user_osdir=/Data/Application/OS
user_isopath=$user_osdir/Linux/slax-64bit-9.4.0.iso

# alias
a1="user_update_menu"
a2="win10_pe_boot"
a3="user_org_prefix=(hd0,1)/boot/grub2"

if [ "$user_ever_loaded" != "y" ]; then
	user_ever_loaded=y
	user_load_all_menu=n
#--------------configfile $prefix/grub2-init.cfg

	# 加载视频模块
	insmod all_video
	insmod vbe
	insmod vga
	insmod video_bochs
	insmod video_cirrus

	# 加载显示模块
	insmod font
	insmod gfxterm
	insmod gfxmenu
	insmod gettext
	insmod png
	# insmod jpeg
	insmod gfxterm_background

	# 加载文件系统模块
	# insmod part_msdos
	# insmod part_gpt
	# insmod ntfs
	# insmod fat32
	# insmod exfat
	# insmod iso9660
	# insmod ext2


	# 加载unicode字体显示中文
	loadfont $prefix/unicode.pf2
	set locale_dir=$prefix
	set lang=zh_cn

	# 设置分辨率
	set gfxmode=auto
	terminal_output gfxterm
	set pager=1

	# 设置背景图片
	background_image $prefix/wallpaper.png

	# 颜色
	set color_normal=green/black
	set color_highlight=white/cyan

	# 倒计时
	set timeout=8
	# set timeout_style=menu
	
#--------------configfile $prefix/grub2-env.cfg
	if [ -s $prefix/grubenv ]; then
		set have_grubenv=true
		load_env
	fi
	if [ "${initrdfail}" = 2 ]; then
		 set initrdfail=
	elif [ "${initrdfail}" = 1 ]; then
		 set next_entry="${prev_entry}"
		 set prev_entry=
		 save_env prev_entry
		 if [ "${next_entry}" ]; then
			set initrdfail=2
		 fi
	fi
	if [ "${next_entry}" ] ; then
		 set default="${next_entry}"
		 set next_entry=
		 save_env next_entry
		 set boot_once=true
	else
		 set default="0"
	fi

	if [ "${feature_menuentry_id}" = "y" ]; then
		menuentry_id_option="--id"
	else
		menuentry_id_option=""
	fi

	export menuentry_id_option

	if [ "${prev_saved_entry}" ]; then
		set saved_entry="${prev_saved_entry}"
		save_env saved_entry
		set prev_saved_entry=
		save_env prev_saved_entry
		set boot_once=true
	fi
	
#--------------configfile $prefix/grub2-menu-1st.cfg

	menuentry "Windows 10" {
		extend_win_pbr
	}

	menuentry 'KUbuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-ff923617-2373-4cb1-a3c3-bf2c1176372c' {
		kubuntu_boot
	}
	
	menuentry 'Ubuntu_liveCD_boot' {
		ubuntu_liveCD_boot
	}
	
	menuentry "WePE-Win10_x64_V2.0.iso" {
		win10_pe_boot
	}
	
	menuentry "test Windows 10" {
		insmod chain
		
		tc=1
		
		if [ "$tc" == 1 ]; then
			set root='hd0,msdos9'
			chainloader $prefix/tools/extend_win_pbr
		elif [ "$tc" == 2 ]; then
			set root='hd0,msdos1'
			chainloader $prefix/tools/activate_win_pbr
		elif [ "$tc" == 3 ]; then
			set root='hd0,msdos1'
			chainloader $prefix/tools/win_mbr
		fi
	}
	
#--------------configfile $prefix/grub2-menu-last.cfg
	# 附加启动项
	submenu 'reboot or halt' {
		menuentry "重启计算机" {
			user_reboot
		}
		menuentry "关机计算机" {
			shutdown
		}
	}
fi


if [ "$user_load_all_menu" = "y" ]; then
#--------------configfile $prefix/grub2-hidemenu-1st.cfg
  submenu 'boot from ISO image' {
    menuentry "WePE_Win8_x86.iso by memdisk" {
      win8_pe_boot
    }
    menuentry "Win7PE.iso by memdisk" {
      win7_pe_boot
    }
    menuentry "minimal_linux_live_28-Jan-2018_64-bit_bios.iso by memdisk" {
      insmod ntfs
      insmod linux16
      set user_isopath=$user_osdir/Linux/minimal_linux_live_28-Jan-2018_64-bit_bios.iso
      search.file $user_isopath user_osdisk
      linux16 $prefix/tools/memdisk iso raw
      initrd16 ($user_osdisk)$user_isopath
      boot
    }
    
    menuentry "minimal_linux_live_28-Jan-2018_64-bit_bios.iso by loopback" {
      insmod loopback
      insmod iso9660
      insmod ntfs
      insmod linux
      set user_isopath=$user_osdir/Linux/minimal_linux_live_28-Jan-2018_64-bit_bios.iso
      search.file $user_isopath user_osdisk
      loopback loop ($user_osdisk)$user_isopath
      set root=(loop)
      linux /boot/kernel.xz root=/dev/sda9 init=/bin/bash ro quiet
      initrd /boot/initrd.xz
      boot
    }
    menuentry 'slax 9.4.0 by loopback' {
      slax_liveCD_boot
    }
    menuentry "KUbuntu LiveCD v18.10 by loopback" {
      kubuntu_liveCD_boot
    }
  }
#--------------configfile $prefix/grub2-hidemenu-2nd.cfg
	menuentry "Windows 10 -- win_mbr" {
		win_pbr
	}
	menuentry "Windows 10 -- activate_win_pbr" {
		activate_win_pbr
	}
	menuentry "Windows 10 -- extend_win_pbr" {
		extend_win_pbr
	}

  submenu 'memory test' {
    memory_test
  }
fi


#--------------function declaration
function user_update_menu {
	user_load_all_menu=y
	search.file $user_grub2_path/grub2.iso user_org_root
	user_org_prefix=($user_org_root)$user_grub2_path
	. $user_org_prefix/grub2.cfg
}

function savedefault {
	if [ -z "${boot_once}" ]; then
		saved_entry="${chosen}"
		save_env saved_entry
	fi
}
function initrdfail {
	if [ -n "${have_grubenv}" ]; then
		if [ -n "${partuuid}" ]; then
			if [ -z "${initrdfail}" ]; then
				set initrdfail=1
				if [ -n "${boot_once}" ]; then
					set prev_entry="${default}"
					save_env prev_entry
				fi
			fi
			save_env initrdfail
		fi
	fi
}
function recordfail {
	set recordfail=1
	if [ -n "${have_grubenv}" ]; then if [ -z "${boot_once}" ]; then save_env recordfail; fi; fi
}

#--------------boot function declaration

function shutdown {
	insmod halt
	halt
}

function user_reboot {
	insmod reboot
	reboot
}

function memory_test {
	menuentry 'Memory test (memtest86+)' {
		insmod ext2
		set root='hd0,msdos5'
		knetbsd /boot/memtest86+.elf
	}
	menuentry 'Memory test (memtest86+, serial console 115200)' {
		insmod ext2
		set root='hd0,msdos5'
		linux16 /boot/memtest86+.bin console=ttyS0,115200n8
	}
}

function ubuntu_liveCD_boot {
	insmod ntfs
	insmod iso9660
	insmod loopback
	insmod linux
	set user_isopath=/system/ubuntu-19.04-desktop-amd64.iso
	search.file $user_isopath user_osdisk
	loopback loop ($user_osdisk)$user_isopath
	set root=(loop)
	linux  /casper/vmlinuz boot=casper iso-scan/filename=$user_isopath
	initrd /casper/initrd
}

function kubuntu_liveCD_boot {
	insmod ntfs
	insmod iso9660
	insmod loopback
	insmod linux
	set user_isopath=/Data/Download/aria2c/kubuntu-18.10-desktop-amd64.iso
	search.file $user_isopath user_osdisk
	loopback loop ($user_osdisk)$user_isopath
	set root=(loop)
	linux  /casper/vmlinuz boot=casper iso-scan/filename=$user_isopath
	initrd /casper/initrd
}

function slax_liveCD_boot {
	insmod ntfs
	insmod iso9660
	insmod loopback
	insmod linux
	set user_isopath=$user_osdir/Linux/slax-64bit-9.4.0.iso
	search.file $user_isopath user_osdisk
	loopback loop ($user_osdisk)$user_isopath
	set root=(loop)
	linux /slax/boot/vmlinuz from=$user_isopath ro quiet splash
	initrd /slax/boot/initrfs.img
}

function win7_pe_boot {
	insmod ntfs
	insmod linux16
	set user_isopath=$user_osdir/Windows/WinPE/Win7PE.iso
	search.file $user_isopath user_osdisk
	linux16 $prefix/tools/memdisk iso raw
	initrd16 ($user_osdisk)$user_isopath
	boot
}

function win8_pe_boot {
	insmod ntfs
	insmod linux16
	set user_isopath=$user_osdir/Windows/WinPE/WePE_Win8_x86.iso
	search.file $user_isopath user_osdisk
	linux16 $prefix/tools/memdisk iso raw
	initrd16 ($user_osdisk)$user_isopath
	boot
}

function win10_pe_boot {
	insmod ntfs
	insmod linux16
	set user_isopath=$user_osdir/Windows/WinPE/WePE-Win10_x64_V2.0.iso
	search.file $user_isopath user_osdisk
	linux16 $prefix/tools/memdisk iso raw
	initrd16 ($user_osdisk)$user_isopath
	boot
}

function kubuntu_boot {
	insmod gzio
	if [ "$grub_platform" = "xen" ]; then insmod xzio; insmod lzopio; fi
	insmod ext2
	insmod linux
	
	recordfail
	# load_video
	# gfxmode $linux_gfx_mode
	
	set root='hd0,msdos5'
	linux	/boot/vmlinuz-4.18.0-10-generic root=/dev/sda5 ro  quiet splash $vt_handoff
	initrd	/boot/initrd.img-4.18.0-10-generic
}

function kubuntu_boot_cmd {
	insmod ext2
	insmod linux
	set root='hd0,msdos5'
	linux /vmlinuz root=/dev/sda5 init=/bin/bash ro quiet
	initrd /initrd.img
	boot
}

function extend_win_pbr {
	insmod chain
	set root='hd0,msdos9'
	chainloader $prefix/tools/extend_win_pbr
}

function activate_win_pbr {
	insmod chain
	set root='hd0,msdos1'
	chainloader $prefix/tools/activate_win_pbr
}

function win_mbr {
	insmod chain
	set root='hd0,msdos1'
	chainloader $prefix/tools/win_mbr
}
